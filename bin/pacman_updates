#!/usr/bin/env bash

# Displays number of upgradeable packages.
# For this to work, have a `pacman -Sy` command run in the background as a
# cronjob every so often as root. This script will then read those packages.

PACMAN_FILE="/tmp/pacman_updates.log"
AUR_FILE="/tmp/aur_updates.log"

function get_updates() {
    # Wait for internet connection.
    while true; do [[ check_internet == "Offline" ]] && sleep 0.5 || break; done

    # Get packages and write to file.
    pacman -Qqu 2>/dev/null > $PACMAN_FILE
    yay -Qqu --aur 2>/dev/null > $AUR_FILE

    # Get count
    pacman_count=$(cat $PACMAN_FILE | wc -l)
    aur_count=$(cat $AUR_FILE | wc -l)

    # Write count to stdout. This will show in the bar
    echo ${pacman_count}/${aur_count}
}

function show_updates() {
    # Read the files and show a notification if the file is not empty.

    # Get pacman updates.
    pacman_updates=$(cat /tmp/pacman_updates.log)
    if ! [[ -z $pacman_updates ]]; then
        notify-send "Pacman Updates" "$pacman_updates" 
    fi

    # Get AUR updates.
    aur_updates=$(cat /tmp/aur_updates.log &)
    if ! [[ -z $aur_updates ]]; then
        notify-send "AUR Updates" "$aur_updates"
    fi
}

case $1 in
    get) get_updates ;;
    show) show_updates ;;
esac
